package fr.lip6.threading;

import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

/**
 * Threading utility used by various algorithm for obtaining a pool of threads.
 * @author picard
 *
 */
public class ThreadPoolServer {

	private static ThreadPoolExecutor executor;
	
	/**
	 * Tells the system wide ThreadPoolServer (Singleton pattern)
	 * @return
	 */
	public static ThreadPoolExecutor getThreadPoolExecutor()
	{
		if(executor == null)
		{
			int nbcpu = Runtime.getRuntime().availableProcessors();
			executor = new ThreadPoolExecutor(nbcpu, nbcpu, 3, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>());
		}
		return executor;
	}
	
	/**
	 * Stops the server.
	 */
	public static void shutdownNow() {
		if(executor != null)
			executor.shutdownNow();
		executor = null;
	}
	
}
